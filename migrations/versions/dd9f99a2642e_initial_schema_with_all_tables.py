"""Initial schema with all tables

Revision ID: dd9f99a2642e
Revises: 
Create Date: 2025-10-25 08:38:20.124706

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dd9f99a2642e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('equipment_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team', sa.String(length=80), nullable=False),
    sa.Column('total_inspections', sa.Integer(), nullable=True),
    sa.Column('passed', sa.Integer(), nullable=True),
    sa.Column('failed', sa.Integer(), nullable=True),
    sa.Column('pass_rate', sa.Float(), nullable=True),
    sa.Column('average_confidence', sa.Float(), nullable=True),
    sa.Column('average_inference_time', sa.Float(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_equipment_metrics'))
    )
    with op.batch_alter_table('equipment_metrics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_equipment_metrics_team'), ['team'], unique=True)

    op.create_table('system_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=20), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_system_logs'))
    )
    with op.batch_alter_table('system_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_system_logs_level'), ['level'], unique=False)
        batch_op.create_index(batch_op.f('ix_system_logs_timestamp'), ['timestamp'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('team', sa.String(length=80), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('creado_por_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creado_por_id'], ['users.id'], name=op.f('fk_users_creado_por_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('accion', sa.String(length=120), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('tabla_afectada', sa.String(length=50), nullable=False),
    sa.Column('registro_id', sa.Integer(), nullable=True),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('detalles_anteriores', sa.Text(), nullable=True),
    sa.Column('detalles_nuevos', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name=op.f('fk_audit_logs_usuario_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_logs_accion'), ['accion'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_fecha'), ['fecha'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_tabla_afectada'), ['tabla_afectada'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_usuario_id'), ['usuario_id'], unique=False)

    op.create_table('inference_engines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo', sa.String(length=50), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('ruta_archivo', sa.String(length=255), nullable=False),
    sa.Column('tama√±o_archivo', sa.Integer(), nullable=True),
    sa.Column('fecha_carga', sa.DateTime(), nullable=True),
    sa.Column('creado_por_id', sa.Integer(), nullable=False),
    sa.Column('activo', sa.Boolean(), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('hash_archivo', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['creado_por_id'], ['users.id'], name=op.f('fk_inference_engines_creado_por_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inference_engines'))
    )
    with op.batch_alter_table('inference_engines', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_inference_engines_activo'), ['activo'], unique=False)
        batch_op.create_index(batch_op.f('ix_inference_engines_tipo'), ['tipo'], unique=False)

    op.create_table('ac_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=120), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('target_tornillos', sa.Integer(), nullable=False),
    sa.Column('confidence_threshold', sa.Float(), nullable=False),
    sa.Column('motor_inferencia_id', sa.Integer(), nullable=False),
    sa.Column('creado_por_id', sa.Integer(), nullable=False),
    sa.Column('activo', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creado_por_id'], ['users.id'], name=op.f('fk_ac_models_creado_por_id_users')),
    sa.ForeignKeyConstraint(['motor_inferencia_id'], ['inference_engines.id'], name=op.f('fk_ac_models_motor_inferencia_id_inference_engines')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ac_models'))
    )
    with op.batch_alter_table('ac_models', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ac_models_activo'), ['activo'], unique=False)
        batch_op.create_index(batch_op.f('ix_ac_models_nombre'), ['nombre'], unique=True)

    op.create_table('detections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ac_model_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('motor_inferencia_id', sa.Integer(), nullable=False),
    sa.Column('team', sa.String(length=80), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('detection_count', sa.Integer(), nullable=True),
    sa.Column('expected_count', sa.Integer(), nullable=True),
    sa.Column('diferencia', sa.Integer(), nullable=True),
    sa.Column('image_path', sa.String(length=255), nullable=True),
    sa.Column('duracion_inferencia', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ac_model_id'], ['ac_models.id'], name=op.f('fk_detections_ac_model_id_ac_models')),
    sa.ForeignKeyConstraint(['motor_inferencia_id'], ['inference_engines.id'], name=op.f('fk_detections_motor_inferencia_id_inference_engines')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_detections_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_detections'))
    )
    with op.batch_alter_table('detections', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_detections_ac_model_id'), ['ac_model_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_detections_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_detections_team'), ['team'], unique=False)
        batch_op.create_index(batch_op.f('ix_detections_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_detections_user_id'), ['user_id'], unique=False)

    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ac_model_activo_id', sa.Integer(), nullable=True),
    sa.Column('permitir_registro_publico', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ac_model_activo_id'], ['ac_models.id'], name=op.f('fk_settings_ac_model_activo_id_ac_models')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_settings'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('settings')
    with op.batch_alter_table('detections', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_detections_user_id'))
        batch_op.drop_index(batch_op.f('ix_detections_timestamp'))
        batch_op.drop_index(batch_op.f('ix_detections_team'))
        batch_op.drop_index(batch_op.f('ix_detections_status'))
        batch_op.drop_index(batch_op.f('ix_detections_ac_model_id'))

    op.drop_table('detections')
    with op.batch_alter_table('ac_models', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ac_models_nombre'))
        batch_op.drop_index(batch_op.f('ix_ac_models_activo'))

    op.drop_table('ac_models')
    with op.batch_alter_table('inference_engines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inference_engines_tipo'))
        batch_op.drop_index(batch_op.f('ix_inference_engines_activo'))

    op.drop_table('inference_engines')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_logs_usuario_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_tabla_afectada'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_fecha'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_accion'))

    op.drop_table('audit_logs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_is_active'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('system_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_system_logs_timestamp'))
        batch_op.drop_index(batch_op.f('ix_system_logs_level'))

    op.drop_table('system_logs')
    with op.batch_alter_table('equipment_metrics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_equipment_metrics_team'))

    op.drop_table('equipment_metrics')
    # ### end Alembic commands ###
